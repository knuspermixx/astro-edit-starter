---
import '../styles/global.css';

const { title, description, pubDate, heroImage } = Astro.props;
const slug = Astro.url.pathname.split('/').filter(Boolean).pop() || '';
---

<html lang="de">
  <head>
    <meta charset="UTF-8" />
    <title>{title}</title>
  </head>
  <body class={sessionStorage.getItem('github_pat') ? 'edit-mode' : ''}>
    <main data-slug={slug}>
      <article>
        {heroImage && <img src={heroImage} alt="Hero" />}
        <h1 data-editable={`content/blog/${slug}.mdx`} data-key="title">{title}</h1>
        <p>{pubDate.toString()}</p>
        <div class="edit-controls">
          <button id="publish">Veröffentlichen</button>
          <button id="logout">Ausloggen</button>
          <div id="status"></div>
        </div>
        <div class="content" data-editable={`content/blog/${slug}.mdx`} data-key="body">
          <slot />
        </div>
      </article>
    </main>
    <script type="module">
      const pat = sessionStorage.getItem('github_pat');
      const editControls = document.querySelector('.edit-controls');
      const contentDiv = document.querySelector('.content');
      const publishButton = document.getElementById('publish');
      const logoutButton = document.getElementById('logout');
      const statusDiv = document.getElementById('status');
      const mainEl = document.querySelector('main');
      const slug = mainEl ? mainEl.getAttribute('data-slug') : '';

      if (pat) {
        editControls.style.display = 'block';
        contentDiv.setAttribute('contenteditable', 'true');

        logoutButton.addEventListener('click', () => {
          sessionStorage.removeItem('github_pat');
          window.location.reload();
        });

        publishButton.addEventListener('click', async () => {
          if (!slug) {
            statusDiv.textContent = 'Fehler: Slug ist leer.';
            return;
          }
          const content = contentDiv.innerHTML;
          const filePath = `src/content/blog/${slug}.mdx`;
          statusDiv.textContent = 'Veröffentliche...';

          try {
            const response = await fetch(`https://api.github.com/repos/knuspermixx/editable-astro/contents/${filePath}`, {
              method: 'GET',
              headers: { Authorization: `token ${pat}`, Accept: 'application/vnd.github.v3+json' },
            });
            const data = await response.json();
            if (!response.ok) throw new Error('Failed to fetch file SHA');

            const existingContent = atob(data.content.replace(/\n/g, ''));
            const frontmatterMatch = existingContent.match(/^(---[\s\S]*?---)/);
            const frontmatter = frontmatterMatch ? frontmatterMatch[1] : '';
            const updatedContent = `${frontmatter}\n${content}`;

            const putResponse = await fetch(`https://api.github.com/repos/knuspermixx/editable-astro/contents/${filePath}`, {
              method: 'PUT',
              headers: { Authorization: `token ${pat}`, Accept: 'application/vnd.github.v3+json' },
              body: JSON.stringify({
                message: `Update ${slug} via website`,
                content: btoa(unescape(encodeURIComponent(updatedContent))),
                sha: data.sha,
              }),
            });

            if (putResponse.ok) {
              statusDiv.textContent = 'Erfolgreich veröffentlicht!';
            } else {
              statusDiv.textContent = 'Fehler beim Veröffentlichen.';
            }
          } catch (error) {
            statusDiv.textContent = 'Fehler: ' + error.message;
          }
        });
      } else {
        editControls.style.display = 'none';
        contentDiv.removeAttribute('contenteditable');
      }
    </script>
    <style>
      .edit-controls {
        margin: 1em 0;
      }
      .content {
        padding: 1em;
      }
    </style>
  </body>
</html>